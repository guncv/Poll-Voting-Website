# Build stage: compile the binary in a lightweight alpine-based image
FROM golang:1.23-alpine AS builder
WORKDIR /app

# Cache dependencies by copying go.mod and go.sum first
COPY go.mod go.sum ./
RUN go mod download

# Copy the rest of the source code
COPY . .

# Build a statically linked binary with optimizations to reduce size.
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-s -w" -o app ./cmd/main.go

# Final stage: use a minimal base image (scratch) to run the binary
FROM scratch
COPY --from=builder /app/app /app/app

EXPOSE 8080
ENTRYPOINT ["/app/app"]